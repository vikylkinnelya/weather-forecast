{"version":3,"file":"bundle.js","mappings":"mBAOAA,OAAOC,iBAAiB,oBAAoB,KAExC,MAAMC,EAAOC,SAASC,eAAe,QAC/BC,EAAQF,SAASC,eAAe,cAEtCF,EAAKD,iBAAiB,UAAUK,IAC5BA,EAAEC,iBCbS,MACf,MAAMC,EAAOL,SAASM,cAAc,iBAC5B,MAARD,GAAgBA,EAAKE,WAAWC,YAAYH,IDYxC,GEdW,MACf,MAAMI,EAAeT,SAASM,cAAc,kBAEtCD,EAAOL,SAASU,cAAc,OAEpCL,EAAKM,UAAUC,IAAI,gBACnBH,EAAaI,YAAYR,GAEzB,IAAK,IAAIS,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAIC,EAAMf,SAASU,cAAc,OACjCK,EAAIJ,UAAUC,IAAI,YAAYE,IAAK,gBACnCT,EAAKQ,YAAYE,KFIjB,GGbYC,OAAOC,IACvB,MAAMC,EAAW,sDAAsDD,2CACjEE,QAAYC,MAAM,GAAGF,KAC3B,IAAKC,EAAIE,GACL,MAAM,IAAIC,MAAM,+BAA+BL,eAA4BE,EAAII,UAEnF,MAAMC,QAAaL,EAAIM,OAKvB,OAHiBzB,SAASM,cAAc,cAC/BoB,UAAY,OAAOF,EAAKG,KAAKC,YAE/BJ,GHMH,CAFkBtB,EAAM2B,OAGnBC,MAAKX,GAAOA,EAAId,KAAK0B,SAAQ,CAACC,EAAIC,IAC/BC,eAAeF,EAAIC,OAGtBE,OAAMC,GAAOC,QAAQC,IAAIF,WAKtCvC,OAAO0C,YI5BHnB,MAAM,qBACDU,MAAKU,GAAYA,EAASf,SAC1BK,MAAKW,IACF,MAAMC,EAAW1C,SAASM,cAAc,qBACxCmC,EAAaV,SAAQC,IACjB,MAAMW,EAAS3C,SAASU,cAAc,UACtCiC,EAAOd,MAAQG,EAAGJ,KAClBc,EAAS7B,YAAY8B,U","sources":["webpack://weather/./src/js/main.js","webpack://weather/./src/js/modules/removeList.js","webpack://weather/./src/js/modules/createList.js","webpack://weather/./src/js/services/getForecast.js","webpack://weather/./src/js/services/getCities.js"],"sourcesContent":["'use strict';\r\nimport getCities from './services/getCities'\r\nimport getForecast from './services/getForecast';\r\nimport createList from './modules/createList';\r\nimport removeList from './modules/removeList'\r\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const form = document.getElementById('form')\r\n    const input = document.getElementById('city-input')\r\n\r\n    form.addEventListener(\"submit\", e => {\r\n        e.preventDefault();\r\n        removeList()\r\n        createList()\r\n\r\n        const inputCity = input.value;\r\n\r\n        getForecast(inputCity)\r\n            .then(res => res.list.forEach((el, idx) =>\r\n                setTempByHours(el, idx)\r\n            )\r\n            )\r\n            .catch(err => console.log(err))\r\n    });\r\n\r\n})\r\n\r\nwindow.onload = getCities()","const removeList = () => {\r\n    const list = document.querySelector('.list-wrapper')\r\n    list != null && list.parentNode.removeChild(list)\r\n}\r\n\r\nexport default removeList","const createList = () => {\r\n    const forecastList = document.querySelector('.forecast-list')\r\n\r\n    const list = document.createElement('div')\r\n\r\n    list.classList.add('list-wrapper')\r\n    forecastList.appendChild(list)\r\n\r\n    for (let i = 1; i <= 6; i++) {\r\n        let day = document.createElement('div')\r\n        day.classList.add(`forecast-${i}`, 'forecast-day')\r\n        list.appendChild(day)\r\n    }\r\n}\r\n\r\nexport default createList","const API_key = '03d6788b090850555c7924df3b5462b4'\r\n\r\nconst getForecast = async (city_name) => {\r\n    const API_base = `https://api.openweathermap.org/data/2.5/forecast?q=${city_name}&appid=${API_key}`\r\n    const res = await fetch(`${API_base}`) //передаем адрес ресурса, кот хотим получить \r\n    if (!res.ok) {\r\n        throw new Error(`Could not find forecast for ${city_name}` + `, reseived ${res.status}`)\r\n    }\r\n    const resp = await res.json()\r\n\r\n    const cityName = document.querySelector('.city-name')\r\n    cityName.innerHTML = ` at ${resp.city.name}&nbsp`\r\n\r\n    return resp\r\n}\r\n\r\nexport default getForecast","const getCities = () => {\r\n    fetch('../../cities.json')\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            const datalist = document.querySelector('#data-list-cities')\r\n            jsonResponse.forEach(el => {\r\n                const option = document.createElement('option')\r\n                option.value = el.name\r\n                datalist.appendChild(option)\r\n            })\r\n        })\r\n}\r\n\r\nexport default getCities"],"names":["window","addEventListener","form","document","getElementById","input","e","preventDefault","list","querySelector","parentNode","removeChild","forecastList","createElement","classList","add","appendChild","i","day","async","city_name","API_base","res","fetch","ok","Error","status","resp","json","innerHTML","city","name","value","then","forEach","el","idx","setTempByHours","catch","err","console","log","onload","response","jsonResponse","datalist","option"],"sourceRoot":""}